from PIL import Image

def apply_image_encryption(image_path, key_value):
    img = Image.open(image_path)
    encrypted_img = img.copy()
    img_width, img_height = img.size
    for y in range(img_height):
        for x in range(img_width):
            original_pixel = img.getpixel((x, y))
            new_pixel = tuple((component + key_value) % 256 for component in original_pixel)
            encrypted_img.putpixel((x, y), new_pixel)
    encrypted_img.save("encrypted_output.png")
    print("Encryption complete! The encrypted image has been saved as 'encrypted_output.png'.")

def apply_image_decryption(image_path, key_value):
    encrypted_img = Image.open(image_path)
    decrypted_img = encrypted_img.copy()
    img_width, img_height = encrypted_img.size
    for y in range(img_height):
        for x in range(img_width):
            encrypted_pixel = encrypted_img.getpixel((x, y))
            original_pixel = tuple((component - key_value) % 256 for component in encrypted_pixel)
            decrypted_img.putpixel((x, y), original_pixel)
    decrypted_img.save("decrypted_output.png")
    print("Decryption complete! The decrypted image has been saved as 'decrypted_output.png'.")

def main():
    print("Select an option:")
    print("1. Encrypt an image")
    print("2. Decrypt an image")
    user_choice = int(input("Enter your choice (1 or 2): "))
    if user_choice == 1:
        img_path = input("Please provide the path to the image for encryption: ")
        key = int(input("Please enter an encryption key (integer): "))
        apply_image_encryption(img_path, key)
    elif user_choice == 2:
        img_path = input("Please provide the path to the image for decryption: ")
        key = int(input("Please enter the decryption key (integer): "))
        apply_image_decryption(img_path, key)
    else:
        print("Invalid choice. Please enter either 1 or 2.")

if __name__ == "__main__":
    main()
